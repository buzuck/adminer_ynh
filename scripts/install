#!/bin/bash

# Exit on command errors and treat unset variables as an error
set -eu

app=$YNH_APP_INSTANCE_NAME

# Retrieve arguments
domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
is_public=$YNH_APP_ARG_IS_PUBLIC
root_access=$YNH_APP_ARG_ROOT_ACCESS

# Source YunoHost helpers
source /usr/share/yunohost/helpers

#Â Save app settings
ynh_app_setting_set "$app" is_public "$is_public"
ynh_app_setting_set "$app" root_access "$root_access"

# Check domain/path availability
sudo yunohost app checkurl "${domain}${path_url}" -a "$app" \
    || ynh_die "Path not available: ${domain}${path_url}"


# Copy source files
src_path=/var/www/$app
sudo mkdir -p $src_path
if [[ $root_access -eq 1 ]]; then
#copy files from with_root_access folder to the src_path
  sudo cp -a ../sources/with_root_access/. $src_path
else
#copy files from root_access_disabled folder to the src_path
  sudo cp -a ../sources/root_access_disabled/. $src_path
fi

# Set permissions to app files
# you may need to make some file and/or directory writeable by www-data (nginx user)
sudo find $src_path -type f | xargs sudo chmod 644
sudo find $src_path -type d | xargs sudo chmod 755
sudo chown -R root: $src_path

# Modify Nginx configuration file and copy it to Nginx conf directory
nginx_conf=../conf/nginx.conf
sed -i "s@YNH_WWW_PATH@$path_url@g" $nginx_conf
sed -i "s@YNH_WWW_ALIAS@$src_path/@g" $nginx_conf
sudo cp $nginx_conf /etc/nginx/conf.d/$domain.d/$app.conf

sudo chown root: /etc/nginx/conf.d/$domain.d/$app.conf
sudo chmod 600 /etc/nginx/conf.d/$domain.d/$app.conf

# If app is public, add url to SSOWat conf as skipped_uris
if [[ $is_public -eq 1 ]]; then
  # unprotected_uris allows SSO credentials to be passed anyway.
  ynh_app_setting_set "$app" unprotected_uris "/"
fi

sudo service nginx reload
sudo service php5-fpm reload
sudo yunohost app ssowatconf

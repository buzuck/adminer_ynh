#!/bin/bash

# Exit on command errors and treat unset variables as an error
set -eu

# See comments in install script
app=$YNH_APP_INSTANCE_NAME

# Source YunoHost helpers
source /usr/share/yunohost/helpers

# Retrieve app settings
domain=$(ynh_app_setting_get "$app" domain)
path_url=$(ynh_app_setting_get "$app" path)
is_public=$(ynh_app_setting_get "$app" is_public)
root_access=$(ynh_app_setting_get "$app" root_access)


# Remove trailing "/" for next commands
path_url=${path_url%/}


# Copy source files
src_path=/var/www/$app
sudo rm -rf $src_path
sudo mkdir -p $src_path
if [[ $root_access -eq 1 ]]; then
#copy files from with_root_access folder to the src_path
  sudo cp -a ../sources/with_root_access/. $src_path
else
#copy files from root_access_disabled folder to the src_path
  sudo cp -a ../sources/root_access_disabled/. $src_path
fi

# Files owned by root, www-data can just read
sudo find $src_path -type f | xargs sudo chmod 644
sudo find $src_path -type d | xargs sudo chmod 755
sudo chown -R root: $src_path


# Modify Nginx configuration file and copy it to Nginx conf directory
nginx_conf=../conf/nginx.conf
sed -i "s@YNH_WWW_PATH@$path_url@g" $nginx_conf
sed -i "s@YNH_WWW_ALIAS@$src_path/@g" $nginx_conf
sudo cp $nginx_conf /etc/nginx/conf.d/$domain.d/$app.conf
sudo chown root: /etc/nginx/conf.d/$domain.d/$app.conf
sudo chmod 600 /etc/nginx/conf.d/$domain.d/$app.conf

# If app is public, add url to SSOWat conf as skipped_uris
if [[ $is_public -eq 1 ]]; then
  # See install script
  ynh_app_setting_set "$app" unprotected_uris "/"
fi

# Reload nginx service
sudo service nginx reload
sudo yunohost app ssowatconf
